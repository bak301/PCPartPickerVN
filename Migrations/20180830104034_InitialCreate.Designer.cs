// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PCPartCrawler.Context;

namespace PCParkPickerVN.Migrations
{
    [DbContext(typeof(PCPartContext))]
    [Migration("20180830104034_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PCPartCrawler.Entity.Cpu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("BoostFrequency");

                    b.Property<int>("CoresCount");

                    b.Property<bool>("IsCpuCoolerIncluded");

                    b.Property<bool>("IsHyperthreaded");

                    b.Property<int>("L1DataCache");

                    b.Property<int>("L1InstructionCache");

                    b.Property<int>("L2Cache");

                    b.Property<int>("L3Cache");

                    b.Property<int>("Lithography");

                    b.Property<string>("Manufacturer");

                    b.Property<int>("MaxMemorySupported");

                    b.Property<string>("Name");

                    b.Property<float>("OperatingFrequency");

                    b.Property<string>("PartNumber");

                    b.Property<string>("Socket");

                    b.Property<int>("TDP");

                    b.HasKey("Id");

                    b.ToTable("cpu");
                });

            modelBuilder.Entity("PCPartCrawler.Entity.Price<object>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("BasePrice");

                    b.Property<bool>("IsAvailable");

                    b.Property<string>("MerchantLinkReference");

                    b.Property<string>("MerchantName");

                    b.Property<int>("PartId");

                    b.Property<float>("Promo");

                    b.Property<float>("ShippingFee");

                    b.HasKey("Id");

                    b.ToTable("price");
                });
#pragma warning restore 612, 618
        }
    }
}
